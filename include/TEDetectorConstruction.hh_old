/// \file TEDetectorConstruction.hh
/// \brief Definition of the TEDetectorConstruction class

#ifndef TEDetectorConstruction_h
#define TEDetectorConstruction_h 1

#include "globals.hh"
#include "G4VUserDetectorConstruction.hh"
#include "tls.hh"

#include "TFile.h"
#include "TTree.h"

#include "G4Cache.hh"
#include "G4ElectroMagneticField.hh"

#include "TEDefinitions.hh"

class G4VPhysicalVolume;
class G4LogicalVolume;
class G4Material;
class G4UserLimits;
class G4GlobalMagFieldMessenger;

class TEDetectorMessenger;

/// Detector construction class to define materials, geometry
/// and global uniform magnetic field.

class TEDetectorConstruction : public G4VUserDetectorConstruction
{
  public:
    TEDetectorConstruction();
    virtual ~TEDetectorConstruction();

  public:
    virtual G4VPhysicalVolume* Construct();
    virtual void ConstructSDandField();

    // Set methods
    void SetTargetMaterial (G4String );
    void SetMaxStep (G4double );
    void SetCheckOverlaps(G4bool );

  private:
    // methods
    void DefineMaterials();
    G4VPhysicalVolume* DefineVolumes();
    
    G4int nE27_E31_Elecs =  5;  // E27 - E31;
    G4int nE32_E34_Elecs =  4;  // E32 - E34;
    G4int nE45_E49_Elecs =  5;  // E45 - E49;
    G4int nE51_E67_Elecs = 17;  // E51 - E67;
    G4int nE68_E87_Elecs = 20;  // E68 - E87;
    
    G4LogicalVolume **fLVE27_E31_Elecs;      // pointer to the logical volumes for electrodes E27 - E31
    G4LogicalVolume **fLVE32_E34_Elecs;      // pointer to the logical volumes for electrodes E32 - E34
    G4LogicalVolume **fLVE45_E49_Elecs;      // pointer to the logical volumes for electrodes E45 - E49
    G4LogicalVolume **fLVE51_E67_Elecs;      // pointer to the logical volumes for electrodes E51 - E67
    G4LogicalVolume **fLVE68_E87_Elecs;      // pointer to the logical volumes for electrodes E68 - E87
  
    // data members
    G4LogicalVolume*   fLogicTarget;     // pointer to the logical Target

    G4Material*        fTargetMaterial;  // pointer to the target material
    G4Material*        fVesselMaterial;  // pointer to the vessel material

    G4UserLimits* fStepLimit;            // pointer to user step limits

//     TEDetectorMessenger*  fMessenger;   // messenger

    static G4ThreadLocal G4GlobalMagFieldMessenger*  fMagFieldMessenger; 
                                         // magnetic field messenger
    
    G4bool  fCheckOverlaps; // option to activate checking of volumes overlaps 
    
    TTree *tfield;
    
    G4double                  zOffset = 0.;
    G4Cache<G4ElectroMagneticField*> fBField;  // pointer to the thread-local fields
};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif
